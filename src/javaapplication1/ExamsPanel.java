package javaapplication1;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Omar AbuRish
 */
public class ExamsPanel extends javax.swing.JFrame {

    /**
     * Creates new form ExamsPanel
     */
    Patient currentPatient; 
    int numberOfExams , currentExamIndex = 0;
    Examination currentExam ; 
    Logger log ;
    ArrayList<Patient> patients;
    private boolean addingNewExam = false;
    
    
    public ExamsPanel(Patient p , Logger log , ArrayList<Patient> patients) {
        
        initComponents();
        this.log = log;
        this.patients = patients;
        currentPatient = p ; 
        updateExamFields();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setPatientFields();
        
        
    }
    
    
    public void setPatientFields() {
        idTextField.setText(currentPatient.getId()+ "");
        patientNameTextField.setText(currentPatient.getName());
        patientBirthDateTextField.setText(currentPatient.getBirthDate().getYear() + "");
    }
    public void updateExamFields() {
        numberOfExams  = currentPatient.getNumberOfExams();
        Examination currentExam = currentPatient.getExams().get(currentExamIndex);
        
        nextAndPreviousButtonEnabler();
        
        
        examDateTextField.setText(currentExam.getExamDate().format(DateTimeFormatter.ISO_LOCAL_DATE).toString());
        examHourTextField.setText(currentExam.getExamDate().format(DateTimeFormatter.ofPattern("HH:mm")).toString());
        
        rightCylinderTextField.setText(((currentExam.getRightCylinder()> 0)? "+" : "") + currentExam.getRightCylinder() + "");
        
        rightAxisTextField.setText( (int)currentExam.getRightAxis() + "");
        rightSphereTextField.setText(((currentExam.getRightSphere() > 0)? "+" : "" )  + currentExam.getRightSphere() + "");
        
        leftCylinderTextField.setText(( (currentExam.getLeftCylinder()> 0)? "+" : "" )  + currentExam.getLeftCylinder() + "");
        leftAxisTextField.setText(  (int)currentExam.getLeftAxis()+ "");
        leftSphereTextField.setText( ((currentExam.getLeftSphere()> 0)? "+" : "")   + currentExam.getLeftSphere() + "");
        
        if (currentExam.getNear() != 0)
            nearTextField.setText( (int)currentExam.getNear() + "");
        noteTextField.setText(currentExam.getNote());
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel4 = new javax.swing.JPanel();
        patientNameTextField = new javax.swing.JTextField();
        patientBirthDateTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        leftCylinderTextField = new javax.swing.JTextField();
        leftAxisTextField = new javax.swing.JTextField();
        leftSphereTextField = new javax.swing.JTextField();
        rightAxisTextField = new javax.swing.JTextField();
        rightCylinderTextField = new javax.swing.JTextField();
        rightSphereTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        examDateTextField = new javax.swing.JTextField();
        nearTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        noteTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        examHourTextField = new javax.swing.JTextField();
        nextButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        changeEnableButton = new javax.swing.JButton();
        idTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        addNewExamButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        deletePatientMenuItem = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        patientNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        patientNameTextField.setEnabled(false);

        patientBirthDateTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        patientBirthDateTextField.setEnabled(false);
        patientBirthDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientBirthDateTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("سنة الميلاد");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("الاسم");

        leftCylinderTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        leftCylinderTextField.setEnabled(false);
        leftCylinderTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftCylinderTextFieldActionPerformed(evt);
            }
        });

        leftAxisTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        leftAxisTextField.setEnabled(false);
        leftAxisTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftAxisTextFieldActionPerformed(evt);
            }
        });

        leftSphereTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        leftSphereTextField.setEnabled(false);
        leftSphereTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftSphereTextFieldActionPerformed(evt);
            }
        });

        rightAxisTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rightAxisTextField.setEnabled(false);
        rightAxisTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightAxisTextFieldActionPerformed(evt);
            }
        });

        rightCylinderTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rightCylinderTextField.setEnabled(false);
        rightCylinderTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightCylinderTextFieldActionPerformed(evt);
            }
        });

        rightSphereTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rightSphereTextField.setEnabled(false);
        rightSphereTextField.setName(""); // NOI18N
        rightSphereTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightSphereTextFieldActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Right");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Left");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setText("Axis");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setText("Sphere");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("Cylinder");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("تاريخ الفحص");

        examDateTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        examDateTextField.setEnabled(false);
        examDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examDateTextFieldActionPerformed(evt);
            }
        });

        nearTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nearTextField.setEnabled(false);
        nearTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nearTextFieldActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel14.setText("Near");

        noteTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        noteTextField.setEnabled(false);
        noteTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noteTextFieldActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel15.setText("Note");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel16.setText("ساعة الفحص");

        examHourTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        examHourTextField.setEnabled(false);
        examHourTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examHourTextFieldActionPerformed(evt);
            }
        });

        nextButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nextButton.setText("التالي");
        nextButton.setEnabled(false);
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        previousButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        previousButton.setText("السابق");
        previousButton.setEnabled(false);
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        saveButton.setText("حفظ");
        saveButton.setEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        changeEnableButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        changeEnableButton.setText("اضغط هنا للتعديل");
        changeEnableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeEnableButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(examDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(jLabel5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(examHourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel16))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jLabel12)
                        .addGap(72, 72, 72)
                        .addComponent(jLabel13)
                        .addGap(56, 56, 56)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel6)
                        .addGap(34, 34, 34)
                        .addComponent(rightSphereTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(rightCylinderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(rightAxisTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(leftSphereTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(leftCylinderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(leftAxisTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jLabel14)
                        .addGap(40, 40, 40)
                        .addComponent(nearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(noteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(nextButton)
                        .addGap(46, 46, 46)
                        .addComponent(changeEnableButton)
                        .addGap(41, 41, 41)
                        .addComponent(previousButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(saveButton)))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(examDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(examHourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(rightSphereTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rightCylinderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rightAxisTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel7))
                    .addComponent(leftSphereTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(leftCylinderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(leftAxisTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel14))
                    .addComponent(nearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel15))
                    .addComponent(noteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nextButton)
                    .addComponent(changeEnableButton)
                    .addComponent(previousButton))
                .addGap(19, 19, 19)
                .addComponent(saveButton))
        );

        idTextField.setEditable(false);
        idTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        idTextField.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("الرقم التعريفي");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(282, 282, 282)
                                .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(jLabel4))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(patientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(113, 113, 113)
                                .addComponent(jLabel2))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(247, 247, 247)
                                .addComponent(patientBirthDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addComponent(jLabel3)))
                        .addGap(0, 171, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel2)))
                .addGap(13, 13, 13)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patientBirthDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel3)))
                .addGap(6, 6, 6)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addNewExamButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addNewExamButton.setText("إضافة فحص جديد");
        addNewExamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewExamButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("حذف بيانات الزبون");

        deletePatientMenuItem.setText("حذف بيانات الزبون");
        deletePatientMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePatientMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(deletePatientMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addNewExamButton, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addNewExamButton)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void patientBirthDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientBirthDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientBirthDateTextFieldActionPerformed

    private void leftCylinderTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftCylinderTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leftCylinderTextFieldActionPerformed

    private void leftAxisTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftAxisTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leftAxisTextFieldActionPerformed

    private void leftSphereTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftSphereTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leftSphereTextFieldActionPerformed

    private void rightAxisTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightAxisTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rightAxisTextFieldActionPerformed

    private void rightCylinderTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightCylinderTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rightCylinderTextFieldActionPerformed

    private void rightSphereTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightSphereTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rightSphereTextFieldActionPerformed

    private void examDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examDateTextFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_examDateTextFieldActionPerformed

    private void nearTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nearTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nearTextFieldActionPerformed

    private void noteTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noteTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noteTextFieldActionPerformed

    private void examHourTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examHourTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_examHourTextFieldActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        // TODO add your handling code here:
        currentExamIndex++;
        
        updateExamFields();
    }//GEN-LAST:event_nextButtonActionPerformed

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        // TODO add your handling code here:
        currentExamIndex--;
        updateExamFields();
    }//GEN-LAST:event_previousButtonActionPerformed

    private void updatePatientData() throws NumberFormatException{
        currentPatient.setId(Integer.parseInt(idTextField.getText() ));
        currentPatient.setName(patientNameTextField.getText());
        patientBirthDateTextField.getText();
        currentPatient.setBirthDate(new Date(1, 1, Integer.parseInt(patientBirthDateTextField.getText())));
        
    }
    
    
    private LocalDateTime checkTimeValidity() throws DateTimeParseException {
        try {
            String str = examDateTextField.getText() + " " + examHourTextField.getText();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm"); 
            LocalDateTime dateTime = LocalDateTime.parse(str, formatter);
            return dateTime;
        } catch(DateTimeParseException e) {
            throw e ;
        }
    }
    private void checkDataValidity() throws NumberFormatException{
        try {
            currentExam = currentPatient.getExams().get(currentExamIndex);
            Integer.parseInt(idTextField.getText());
            Integer.parseInt(patientBirthDateTextField.getText());
            
            Float.parseFloat(rightSphereTextField.getText());
            Float.parseFloat(rightCylinderTextField.getText());
            Float.parseFloat(rightAxisTextField.getText());
            Float.parseFloat(leftSphereTextField.getText());
            Float.parseFloat(leftCylinderTextField.getText());
            Float.parseFloat(leftAxisTextField.getText());
            
        }
        catch (NumberFormatException e) {
            throw e;
        }
        
    }
    
    private void updateExamData() throws DateTimeParseException{
        try {
            LocalDateTime examDate = checkTimeValidity();
            currentExam.setExamDate(examDate);

            currentExam.setLeftAxis(Float.parseFloat(leftAxisTextField.getText()));
            currentExam.setLeftCylinder(Float.parseFloat(leftCylinderTextField.getText()));
            currentExam.setLeftSphere(Float.parseFloat(leftSphereTextField.getText()));
            currentExam.setRightAxis(Float.parseFloat(rightAxisTextField.getText()));
            currentExam.setRightCylinder(Float.parseFloat(rightCylinderTextField.getText()));
            currentExam.setRightSphere(Float.parseFloat(rightSphereTextField.getText()));
            
            if(!nearTextField.getText().isBlank())
                currentExam.setNear(Float.parseFloat(nearTextField.getText()));
            currentExam.setNote(noteTextField.getText());
        } catch (DateTimeParseException e ){
            throw e; 
        }
        
    }
    
    private void nextAndPreviousButtonEnabler() {
        if(currentExamIndex < numberOfExams - 1 ) {
            nextButton.setEnabled(true);
        }
        else {
            nextButton.setEnabled(false);
        }
        
        if(currentExamIndex > 0 ) {
            previousButton.setEnabled(true);
        }
        else {
            previousButton.setEnabled(false);
        }
    }
    
    private void addNewExam() {
        try { 
            
            Patient examedPatient = currentPatient;


             String str = examDateTextField.getText() + " " + examHourTextField.getText();
             DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm"); 
             LocalDateTime dateTime = LocalDateTime.parse(str, formatter);

             float near = 0 ; 
             if(!nearTextField.getText().isBlank())
                 near = Float.parseFloat(nearTextField.getText());
             
             examedPatient.addExam(new Examination(
                     dateTime, 
                     Float.parseFloat(rightSphereTextField.getText()),
                     Float.parseFloat(rightCylinderTextField.getText()),
                     Float.parseFloat(rightAxisTextField.getText()),
                     Float.parseFloat(leftSphereTextField.getText()),
                     Float.parseFloat(leftCylinderTextField.getText()),
                     Float.parseFloat(leftAxisTextField.getText()),
                     near,
                     noteTextField.getText()
             ));


             
             toggleButtons(false);
             log.writeToFile(patients);

        } catch(Exception e) {
            JOptionPane.showMessageDialog(rootPane, "البيانات ليست صحيحة يرجى وضعها مرة أخرى");
        }  
    }
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        try {
            checkDataValidity();
            
            if(addingNewExam == true) {
                examDateTextField.setText(LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE));
                examHourTextField.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("HH:mm")));
                addNewExam();
                toggleButtons(false);
                
                JOptionPane.showMessageDialog(rootPane, "تم إضافة الفحص بنجاح");
                addingNewExam = false ; 
                
                resetFields();
                currentExamIndex = currentPatient.getExams().size() - 1;
                updateExamFields();
                toggleSaveButton();
                addNewExamButton.setVisible(true);
            } else {
                updatePatientData();
                updateExamData();

                changeEnableButton.setEnabled(true);
                toggleButtons(false);
                nextAndPreviousButtonEnabler();
                JOptionPane.showMessageDialog(rootPane, "تم تعديل البيانات بنجاح");
            }
            
            
            log.writeToFile(patients);
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "المعلومات المدخلة غير صحيحة يرجى تعديلها");
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(rootPane, "المعلومات المدخلة غير صحيحة يرجى تعديلها");
        }
        
        
        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void toggleButtons(boolean state) {
        saveButton.setEnabled(state);
        
        patientNameTextField.setEnabled(state);
        patientBirthDateTextField.setEnabled(state);
        
        examDateTextField.setEnabled(state);
        examHourTextField.setEnabled(state);
        rightAxisTextField.setEnabled(state);
        rightCylinderTextField.setEnabled(state);
        rightSphereTextField.setEnabled(state);
        
        leftAxisTextField.setEnabled(state);
        leftCylinderTextField.setEnabled(state);
        leftSphereTextField.setEnabled(state);
        
        noteTextField.setEnabled(state);
        nearTextField.setEnabled(state);
        
        
        nextButton.setEnabled(!state);
        previousButton.setEnabled(!state);
        changeEnableButton.setEnabled(!state);
    }
    private void changeEnableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeEnableButtonActionPerformed
        // TODO add your handling code here:
        saveButton.setEnabled(true);
        
        patientNameTextField.setEnabled(true);
        patientBirthDateTextField.setEnabled(true);
        
        examDateTextField.setEnabled(true);
        examHourTextField.setEnabled(true);
        rightAxisTextField.setEnabled(true);
        rightCylinderTextField.setEnabled(true);
        rightSphereTextField.setEnabled(true);
        
        leftAxisTextField.setEnabled(true);
        leftCylinderTextField.setEnabled(true);
        leftSphereTextField.setEnabled(true);
        
        noteTextField.setEnabled(true);
        nearTextField.setEnabled(true);
        
        
        nextButton.setEnabled(false);
        previousButton.setEnabled(false);
        changeEnableButton.setEnabled(false);
        
    }//GEN-LAST:event_changeEnableButtonActionPerformed

    
    private void resetFields() {
        idTextField.setText(currentPatient.getId() + "");
        patientNameTextField.setText(currentPatient.getName());
        patientBirthDateTextField.setText(currentPatient.getBirthDate().getYear() + "");
        examDateTextField.setText(LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE));
        examHourTextField.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("HH:mm")));
        rightAxisTextField.setText("");
        rightCylinderTextField.setText("");
        rightSphereTextField.setText("");
        
        leftAxisTextField.setText("");
        leftCylinderTextField.setText("");
        leftSphereTextField.setText("");
        
        nearTextField.setText("");
        noteTextField.setText("");
        
        
    }
    
    private void toggleSaveButton() {
        String[] states = {"حفظ" , "إضافة فحص" };
        int stateIndex = 1;
        boolean state = false ; 
        if(addingNewExam == false) {
            state = true ; 
            stateIndex = 0 ; 
        }
        
        saveButton.setText(states[stateIndex]);
        nextButton.setVisible(state);
        previousButton.setVisible(state);
        changeEnableButton.setVisible(state);
    }
    private void addNewExamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewExamButtonActionPerformed
        // TODO add your handling code here:
        resetFields();
        addingNewExam = true ;
        toggleSaveButton();
        saveButton.setText("إضافة الفحص");
        nextButton.setVisible(false);
        previousButton.setVisible(false);
        changeEnableButton.setVisible(false);
        
        
        saveButton.setEnabled(true);
        
        patientNameTextField.setEnabled(false);
        patientBirthDateTextField.setEnabled(false);
        
        examDateTextField.setEnabled(true);
        examHourTextField.setEnabled(true);
        rightAxisTextField.setEnabled(true);
        rightCylinderTextField.setEnabled(true);
        rightSphereTextField.setEnabled(true);
        
        leftAxisTextField.setEnabled(true);
        leftCylinderTextField.setEnabled(true);
        leftSphereTextField.setEnabled(true);
        
        noteTextField.setEnabled(true);
        nearTextField.setEnabled(true);
        
        addNewExamButton.setVisible(false);
        
    }//GEN-LAST:event_addNewExamButtonActionPerformed

    private void deletePatientMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePatientMenuItemActionPerformed
        // TODO add your handling code here:
        if( JOptionPane.showConfirmDialog(rootPane, "هل تريد حذف بيانات هذا الزبون؟") == 0) {
            patients.remove(currentExamIndex);
            this.dispose();
        }
    }//GEN-LAST:event_deletePatientMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewExamButton;
    private javax.swing.JButton changeEnableButton;
    private javax.swing.JMenuItem deletePatientMenuItem;
    private javax.swing.JTextField examDateTextField;
    private javax.swing.JTextField examHourTextField;
    private javax.swing.JTextField idTextField;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField leftAxisTextField;
    private javax.swing.JTextField leftCylinderTextField;
    private javax.swing.JTextField leftSphereTextField;
    private javax.swing.JTextField nearTextField;
    private javax.swing.JButton nextButton;
    private javax.swing.JTextField noteTextField;
    private javax.swing.JTextField patientBirthDateTextField;
    private javax.swing.JTextField patientNameTextField;
    private javax.swing.JButton previousButton;
    private javax.swing.JTextField rightAxisTextField;
    private javax.swing.JTextField rightCylinderTextField;
    private javax.swing.JTextField rightSphereTextField;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
